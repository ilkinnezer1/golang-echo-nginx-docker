version: '3'

services:
  broker-service:
    container_name: broker_service
    build:
      # Update context path based on folder structure
      context: ./../broker-service
      # Update dockerfile path based on project folder structure
      dockerfile: ../broker-service/cmd/broker-service.dockerfile
    restart: always
    ports:
      - "7000:7000"
    deploy:
      mode: replicated
      replicas: 1
    networks:
      - microservice

  auth-service:
    container_name: auth_service
    build:
      context: "./../auth-service"
      dockerfile: ../auth-service/cmd/auth-service.dockerfile
    restart: always
    ports:
      - "6000:6000"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=yourhost port=5432 user=youruser password=yourpasswd dbname=yourdbname sslmode=disable timezone=UTC connect_timeout=5"
    networks:
      - microservice

  postgres:
   image: 'postgres:15.3-alpine'
   container_name: db_postgres
   ports:
     - '5432:5432'
   restart: always
   deploy:
     mode: replicated
     replicas: 1
   environment:
     - DB_USER=${YOUR_USER}
     - DB_PASSWD=${YOUR_PASSWD}
     - DB_NAME=${YOUR_DB_NAME}
     - DB_HOST=${YOUR_DB_HOST}
     # persist data in db-data (add new dir), data dir path in image
   volumes:
     - ./db-data/postgres/:/var/lib/postgres/data/

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      ADMIN_DEFAULT_EMAIL: ${ADMIN_DEFAULT_EMAIL}
      ADMIN_DEFAULT_PASSWORD: ${ADMIN_DEFAULT_PASSWORD}
    depends_on:
      - postgres
    ports:
      - "5050:80"
    restart: unless-stopped
    networks:
      - microservice

volumes:
  db-data:
    external: true

# facilitates communication between containers
networks:
  microservice:
    driver: bridge